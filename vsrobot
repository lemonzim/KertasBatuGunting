/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany.kertasbatugunting;

import java.awt.*;
import java.awt.event.*;
import java.util.Random;
import javax.swing.*;

/**
 *
 * @author Muhammad Hazim
 */

public class vsrobot extends JFrame implements ItemListener, ActionListener{
    private Container a;
    private JLabel gambarplayer,gambarrobot,gambartanganlabel, gambartanganmusuhlabel, keputusan;
    private JLabel[] hati = new JLabel[10];
    private JButton[] skin = new JButton[19];
    private JPanel skinrow,skinrowa,humanicon,animalicon,transporticon, buttonrow, gambarpilihanrow, nyawa,nyawaplayer,nyawarobot, gambartangan, gambartanganmusuh;
    private final JButton kertas, batu, gunting;
    private Random random;
    private int playercounter = 0;
    private int botcounter = 0;
    
    something info = new something();
    
    
    public vsrobot(){
    super("Kertas Batu Gunting");
    
    a = getContentPane();
    a.setLayout(new GridLayout(4,1));
    
    skinrow = new JPanel();
    skinrow.setLayout(new GridLayout(1,1));

    skinrowa = new JPanel();
    skinrowa.setLayout(new FlowLayout());
    humanicon = new JPanel();
    humanicon.setLayout(new FlowLayout());
    animalicon = new JPanel();
    animalicon.setLayout(new FlowLayout());
    transporticon = new JPanel();
    transporticon.setLayout(new FlowLayout());
    
    
    buttonrow = new JPanel();
    buttonrow.setLayout(new FlowLayout());
    
    
    gambarpilihanrow = new JPanel();
    gambarpilihanrow.setLayout(new GridLayout(1,2));
    gambartangan = new JPanel();
    gambartangan.setLayout(new FlowLayout());
    gambartanganmusuh = new JPanel();
    gambartanganmusuh.setLayout(new FlowLayout());
    nyawa= new JPanel();
    nyawa.setLayout(new GridLayout(1,2));
    nyawaplayer = new JPanel();
    nyawaplayer.setLayout(new FlowLayout());
    nyawarobot = new JPanel();
    nyawarobot.setLayout(new FlowLayout());
    
    gambartanganlabel = new JLabel();
    gambartanganlabel.setText(info.getnama1());
    gambartanganlabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Muhammad Hazim\\Downloads\\question.png"));
    
    gambartanganmusuhlabel = new JLabel();
    gambartanganmusuhlabel.setText("Computer");
    gambartanganmusuhlabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Muhammad Hazim\\Downloads\\question.png"));
    
    gambarplayer = new JLabel();
    gambarrobot = new JLabel(info.gambarrobot());
    
    keputusan = new JLabel("Keputusan");
    
    nyawaplayer.add(gambarplayer);
    //Skin
    for(int i=0;i<19;i++)
    {
        skin[i] = new JButton(info.setgambar(i));
        skin[i].setPreferredSize(new Dimension(100,82));
        skin[i].addActionListener(this);
    }
   for(int i=0;i<3;i++)
    {
        switch (i) {
            case 0:
                for(int j=0;j<10;j++)
                {humanicon.add(skin[j]);}
                break;
            case 1:
                for(int j=10;j<15;j++)
                {animalicon.add(skin[j]);}
                break;
            case 2:
                for(int j=15;j<19;j++)
                {transporticon.add(skin[j]);}
                break;
            default:
                break;
        }
    }
    nyawaplayer.add(gambarplayer);
    //Hati
    for(int i=0;i<5;i++)
    {
        hati[i] = new JLabel();
        hati[i].setIcon(info.heart());
        nyawaplayer.add(hati[i]);
    }
        for(int i=5;i<10;i++)
    {
        hati[i] = new JLabel(info.heart());
        hati[i].setIcon(info.heart());
        nyawarobot.add(hati[i]);
    }
        nyawarobot.add(gambarrobot);
    
    kertas = new JButton("kertas");
    kertas.addActionListener(this);

    
    batu = new JButton("batu");
    batu.addActionListener(this);
    
    gunting = new JButton("gunting");
    gunting.addActionListener(this);
    


    nyawa.add(nyawaplayer);
    nyawa.add(nyawarobot);
        
    gambartangan.add(gambartanganlabel);
    gambartanganmusuh.add(gambartanganmusuhlabel);
    gambarpilihanrow.add(gambartangan);
    gambarpilihanrow.add(gambartanganmusuh);
    
    buttonrow.add(kertas);
    buttonrow.add(batu);
    buttonrow.add(gunting);
    
    skinrowa.add(humanicon);
    skinrowa.add(animalicon);
    skinrowa.add(transporticon);
    skinrow.add(skinrowa);
    
    a.add(skinrow);
    a.add(nyawa);
    a.add(gambarpilihanrow);
    a.add(buttonrow);
    setSize(1400,950);
    setVisible(true);
    JOptionPane.showMessageDialog(null,"Pilih Icon");
    setDefaultCloseOperation(EXIT_ON_CLOSE);
    }
    
    public void pilihanmusuh(){
    random = new Random();
    random.nextInt(1, 4);
        switch (random.nextInt(0, 3)) {
            case 0 -> {
                gambartanganmusuhlabel.setIcon(info.pilihtangan(0));
                gambartanganmusuhlabel.setText(info.gettangan(0));
            }
            case 1 -> {
                gambartanganmusuhlabel.setIcon(info.pilihtangan(1));
                gambartanganmusuhlabel.setText(info.gettangan(1));
            }
            case 2 -> {
                gambartanganmusuhlabel.setIcon(info.pilihtangan(2));
                gambartanganmusuhlabel.setText(info.gettangan(2));
            }
            default -> {
            }
        }
     }//if
    public void updatehealthbar(int playercounter, int botcounter)
    {
        switch (playercounter) {
            case 1 -> hati[9].setIcon(info.heartbreak());
            case 2 -> hati[8].setIcon(info.heartbreak());
            case 3 -> hati[7].setIcon(info.heartbreak());
            case 4 -> hati[6].setIcon(info.heartbreak());
            default -> {
            }
        }
        
        switch (botcounter) {
            case 1 -> hati[4].setIcon(info.heartbreak());
            case 2 -> hati[3].setIcon(info.heartbreak());
            case 3 -> hati[2].setIcon(info.heartbreak());
            case 4 -> hati[1].setIcon(info.heartbreak());
            default -> {
            }
        }
    }
    public void tentukanpemenang()
    {
        if(gambartanganlabel.getText().equals("kertas")&&gambartanganmusuhlabel.getText().equals("kertas"))
        {keputusan.setText("SERI");}
        else if(gambartanganlabel.getText().equals("kertas")&&gambartanganmusuhlabel.getText().equals("gunting"))
        {keputusan.setText("KALAH");}
        else if(gambartanganlabel.getText().equals("kertas")&&gambartanganmusuhlabel.getText().equals("batu"))
        {keputusan.setText("MENANG");}
        
        else if(gambartanganlabel.getText().equals("gunting")&&gambartanganmusuhlabel.getText().equals("kertas"))
        {keputusan.setText("MENANG");}
        else if(gambartanganlabel.getText().equals("gunting")&&gambartanganmusuhlabel.getText().equals("gunting"))
        {keputusan.setText("SERI");}
        else if(gambartanganlabel.getText().equals("gunting")&&gambartanganmusuhlabel.getText().equals("batu"))
        {keputusan.setText("KALAH");}
        
        else if(gambartanganlabel.getText().equals("batu")&&gambartanganmusuhlabel.getText().equals("kertas"))
        {keputusan.setText("KALAH");}
        else if(gambartanganlabel.getText().equals("batu")&&gambartanganmusuhlabel.getText().equals("gunting"))
        {keputusan.setText("MENANG");}
        else if(gambartanganlabel.getText().equals("batu")&&gambartanganmusuhlabel.getText().equals("batu"))
        {keputusan.setText("SERI");}
    
    }
    public void updatecounter()
    {
        switch (keputusan.getText()) {
            case "KALAH" -> botcounter = botcounter + 1;
            case "MENANG" -> playercounter = playercounter + 1;
            default -> {
            }
        }
                
        
    }
    
     public void keputusan(int playercounter, int botcounter)
    {
        if(playercounter>=5||botcounter>=5)
        {
           selepaslawanrobot mp = new selepaslawanrobot( playercounter, botcounter);
        dispose();
        }
        
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void actionPerformed(ActionEvent e) {
       for(int i=0; i<19;i++)
        {
            if(e.getSource()==skin[i])
            {
                gambarplayer.setIcon(info.setgambar(i));
                a.remove(0);
                a.validate();
                a.repaint();
            }
            
        
        }
        if(e.getSource()==kertas)
        {
            
            gambartanganlabel.setIcon(info.pilihtangan(0));
            gambartanganlabel.setText(info.gettangan(0));
            pilihanmusuh();


        }
        else if(e.getSource()==batu)
        {
            gambartanganlabel.setIcon(info.pilihtangan(1));
            gambartanganlabel.setText(info.gettangan(1));
            pilihanmusuh();
        }
        else if(e.getSource()==gunting)
        {
            gambartanganlabel.setIcon(info.pilihtangan(2));
            gambartanganlabel.setText(info.gettangan(2));
            pilihanmusuh();
            
        }
        
        
            tentukanpemenang();
            updatecounter();
            updatehealthbar(playercounter,botcounter);
            keputusan(playercounter,botcounter);
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
}
